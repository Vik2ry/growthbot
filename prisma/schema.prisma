datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String       @unique
  image          String?
  chats          Chat[]
  documents      Document[]
  suggestions    Suggestion[]
}

model Chat {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  title     String
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  messages  Message[]
  votes     Vote[]
}

model Message {
  id        String   @id @default(uuid())
  chatId    String
  role      String
  content   Json
  createdAt DateTime @default(now())
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  votes     Vote[]
}

model Vote {
  chatId    String
  messageId String
  isUpvoted Boolean
  chat      Chat    @relation(fields: [chatId], references: [id])
  message   Message @relation(fields: [messageId], references: [id])

  @@id([chatId, messageId])
}

model Document {
  id          String       @id @default(uuid())
  createdAt   DateTime     @default(now())
  title       String
  content     String?
  userId      String
  user        User         @relation(fields: [userId], references: [id])
  suggestions Suggestion[]

  @@unique([id, createdAt])
}

model Suggestion {
  id                String   @id @default(uuid())
  documentId        String
  documentCreatedAt DateTime
  originalText      String
  suggestedText     String
  description       String?
  isResolved        Boolean  @default(false)
  userId            String
  createdAt         DateTime @default(now())
  document          Document @relation(fields: [documentId, documentCreatedAt], references: [id, createdAt])
  user              User     @relation(fields: [userId], references: [id])
}